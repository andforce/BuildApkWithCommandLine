apply plugin: 'com.android.application'

android {
//    compileSdkVersion 29
    compileSdkVersion(29)
    defaultConfig {
        applicationId "com.andforce.buildapkwithcommandline"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    aaptOptions {
//        additionalParameters '-I', 'xx.jar'
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


}

//apply plugin: DebuggerPlugin
//
//import com.android.build.gradle.api.TestVariant
//import com.android.build.gradle.api.UnitTestVariant
//import com.android.build.gradle.internal.variant.ApplicationVariantData
//import com.android.build.gradle.internal.api.ApplicationVariantImpl
//
//class DebuggerPlugin implements Plugin<Project> {
//    void apply(Project project) {
//        project.afterEvaluate {
//            if (project.plugins.hasPlugin("com.android.application")) {
//                def android = project.extensions.getByName("android")
//                android.applicationVariants.all { ApplicationVariantImpl variant ->
//                    project.logger.error "DebuggerPlugin>>>>>>:${variant}"
////                    ApplicationVariantData apkVariantData = variant.getApkVariantData()
////                    ApplicationVariantData variantData = variant.getVariantData()
////                    TestVariant testVariant = variant.getTestVariant()
////                    UnitTestVariant unitTestVariant = variant.getUnitTestVariant()
//                }
//            }
//        }
//    }
//}

apply plugin: PublicPlugin

class PublicPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.afterEvaluate {
            if (project.plugins.hasPlugin("com.android.application")) {
                def android = project.extensions.getByName("android")
                android.applicationVariants.all {def variant ->

                    project.logger.error "DebuggerPlugin>>>>>>:${"process${variant.name.capitalize()}Resources"}"

                    def processResourcesTask = project.tasks.getByName("process${variant.name.capitalize()}Resources")
                    if (processResourcesTask) {
                        def aaptOptions = processResourcesTask.aaptOptions
                        aaptOptions.additionalParameters("-I", "xx.jar")

//                        File publicTxtFile = project.rootProject.file('public.txt')
//                        //public文件存在，则应用，不存在则生成
//                        if (publicTxtFile.exists()) {
//                            project.logger.error "${publicTxtFile} exists, apply it."
//                            //aapt2添加--stable-ids参数应用
//                            aaptOptions.additionalParameters("--stable-ids", "${publicTxtFile}")
//                        } else {
//                            project.logger.error "${publicTxtFile} not exists, generate it."
//                            //aapt2添加--emit-ids参数生成
//                            aaptOptions.additionalParameters("--emit-ids", "${publicTxtFile}")
//                        }
                    }
                }
            }
        }
    }
}
