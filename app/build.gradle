apply plugin: 'com.android.application'

android {
//    compileSdkVersion 29
    compileSdkVersion(29)
    defaultConfig {
        applicationId "com.andforce.buildapkwithcommandline"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        additionalParameters '-I', '/home/dy/Desktop/aapt/xxx.jar'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


}

apply plugin: DebuggerPlugin

import com.android.build.gradle.api.TestVariant
import com.android.build.gradle.api.UnitTestVariant
import com.android.build.gradle.internal.variant.ApplicationVariantData
import com.android.build.gradle.internal.api.ApplicationVariantImpl

class DebuggerPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.afterEvaluate {
            if (project.plugins.hasPlugin("com.android.application")) {
                def android = project.extensions.getByName("android")
                android.applicationVariants.all { ApplicationVariantImpl variant ->
                    project.logger.error "DebuggerPlugin>>>>>>:${variant}"
//                    ApplicationVariantData apkVariantData = variant.getApkVariantData()
//                    ApplicationVariantData variantData = variant.getVariantData()
//                    TestVariant testVariant = variant.getTestVariant()
//                    UnitTestVariant unitTestVariant = variant.getUnitTestVariant()
                }
            }
        }
    }
}
